---
# roles/pg_standby/tasks/main.yml

- name: Create wal archive directory
  sudo: yes
  file:
    path: '{{ archive_dir }}'
    owner: postgres
    group: postgres
    mode: 0755
    state: directory

- name: PostgreSQL recovery configuration
  sudo_user: postgres
  template: src=recovery.conf.j2 dest={{ postgresql_config_home }}/recovery.conf
  notify: Restart postgres

- name: create backup directory
  sudo: yes
  file:
    path: '{{ postgresql_backup_dir }}'
    owner: postgres
    group: postgres
    mode: 0755
    state: directory
  when: backup_postgres

- name: Copy postgres backup script
  sudo: yes
  template:
    src: "create_postgres_dump.sh.j2"
    dest: "/etc/cron.d/create_postgres_dump.sh"
    group: postgres
    owner: postgres
    mode: 0700
    backup: yes
  when: backup_postgres

- name: install boto3
  sudo: yes
  pip:
    name: boto3
    version: 1.4.0
  when: postgres_s3

- name: Create aws config directory
  sudo: yes
  file:
    path: '{{ postgresql_dir_original_path }}/.aws'
    owner: postgres
    group: postgres
    mode: 0755
    state: directory
  when: postgres_s3
    
- name: copy boto3 credentials file
  sudo: yes
  template:
    src: "aws_credentials.j2"
    dest: "{{ postgresql_dir_original_path }}/.aws/credentials"
    group: postgres
    owner: postgres
    mode: 0700
    backup: yes
  when: postgres_s3
  
- name: Copy s3 upload script
  sudo: yes
  template:
    src: "backup_snapshots.py.j2"
    dest: "/etc/cron.d/backup_snapshots.py"
    group: postgres
    owner: postgres
    mode: 0700
    backup: yes
  when: postgres_s3

- name: Create Daily Cron job
  sudo: yes
  cron:
    name: "Backup postgres daily"
    job: "/etc/cron.d/create_postgres_dump.sh daily 3"
    minute: 0
    hour: 0
    weekday: "1,2,3,4,5,6"
    user: postgres
    cron_file: backup_postgres
  when: backup_postgres

- name: Create Weekly Cron job
  sudo: yes
  cron:
    name: "Backup postgres weekly"
    job: "/etc/cron.d/create_postgres_dump.sh weekly 21"
    minute: 0
    hour: 0
    weekday: 0
    user: postgres
    cron_file: backup_postgres
  when: backup_postgres

- name: copy retrieve script
  sudo: yes
  template:
    src: "retrieve_backup.py.j2"
    dest: "/root/retrieve_backup.py"
    group: root
    owner: root
    mode: 0700
    backup: yes
  when: postgres_s3

- name: copy restore script
  sudo: yes
  template:
    src: "restore_from_backup.sh.j2"
    dest: "/root/restore_from_backup.sh"
    group: root
    owner: root
    mode: 0700
    backup: yes
  when: postgres_s3
